[{"date":"18 October, 2021","subtitle":"1. OverviewLet\u0026rsquo;s continue with the series of posts dedicated to GitHub Actions with the second article where we will talk about how to build and publish a Docker image from your GitHub repository.\nIf you alredy know about Docker, containers, images and docker hub you can jump into paragraph 2.\nWhy is it important to automate the process of creating container images from our code repository? Because in this way, at each commit of our stable branch, we can execute a workflow that, for example: tests our code, creates an image and pushes it on a container registry.","tags":"ci/cd GitHub Actions","title":"How to setup a pipeline with GitHub (part 2)","url":"/posts/github-pipeline-2/"},{"date":"4 September, 2021","subtitle":"1. OverviewLet\u0026rsquo;s start this series of posts \u0026ldquo;Series of posts\u0026rdquo;) dedicated to GitHub Actions with the first article about the definition of Action and how to create our workflow using the actions made available by the community.\n1.1 About GitHub ActionsAccording to the GitHub documentation, a GitHub Action can: automate, customize, and run software development workflows right in your repository.\nA typical use of GitHub Actions is to create a workflow to manage the Continuous Integration and Continuous Delivery or Deployment phase.","tags":"ci/cd GitHub Actions","title":"How to setup a pipeline with GitHub (part 1)","url":"/posts/github-pipeline-1/"},{"date":"20 August, 2021","subtitle":"In this series of posts I will show you how to set up a GitHub Action that will be triggered when you commit to the repository. The Action in particular will test the code, create a Docker image and publish it to the docker hub. Next we will use NGINX server in Ubuntu it as a reverse proxy to run our Docker image downloaded from Docker Hub and run through D_ocker Compose_ on a custom port exposed to the outside through NGINX.","tags":"ci/cd GitHub Actions","title":"How to setup a pipeline with GitHub","url":"/posts/github-pipeline-0/"},{"date":"19 June, 2021","subtitle":"In this blog I will talk about the known and lesser known topics concerning the possibility of creating a modern, professional, multiplatform, modular, performing, highly available, scalable and maintainable software.\nWhich languages and frameworks will I deal with? I prefer C# and dotnet, Java, Javascript / Typescript and Nodejs equally.\nWhat about logical architecture? I will talk about the design of an architecture using the following mothodologies: Domain Driven Design CQRS and the Clean Architecture.","tags":"blog","title":"What this blog will cover","url":"/posts/what-this-blog-will-cover/"}]